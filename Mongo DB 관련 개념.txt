- DB(DataBase)
   : 데이터를 대량으로 영구적으로 보관 + 그 데이터를 빠르게 입/출력 하는데 특화 + 여러 사용자가 공유하여 사용할수 있는 통합해서 저장한 운영 데이터의 집합
      -> 일반적으로 데이터베이스 관리 시스템(DBMS)에 의해 제어

     # DB의 종류
        1. 관계형 데이터베이스 (RDBMS)
            : 각 데이터들이 1개 이상의 '행 : 열' = 'key : value' 관계로 이뤄진 테이블 형식의 스키마에 저장되어 있는 DB
              (= 서로 다른 데이터 구조가 어떻게 관련되어 있는지 명확하게 정규화되어 정의되어 있기에, 쉽게 파악하고 이해 가능)
                  -> 정규화 되어 있기에, 데이터 입/출력의 정확도가 뛰어난 편

                      EX) MySQL, PostgreSQL, Oracle, SQLite, MSSQL
                           -> 아주 대부분의 프로젝트들이 사용하는 DB들이 다 여기 있으며, SQL 사용

        
        2. 비관계형 데이터베이스 (NoSQL)
            : 1과 같은 테이블 형식의 스키마를 사용하지 않는 DB
              (= 명확하고 정확도는 기대 못하지만? 자유롭게 이용가능하며, JSON형식과 유사하게 사용 가능)
                  -> 정규화 안해도 되서 단순하고 빠르지만, 데이터 입/출력이 정확하지 않아, 정교한 조직이나 수정이 힘들다

                      EX) MongoDB, Redis

- MongoDB
   : 비관계형 데이터베이스 DB 중 하나

      # MongoDB 구조 종류
         : document 데이터베이스 = Database -> collection -> document단위를 기준으로 한 document당 js객체와 같은 형식으로 구성
            -> 코드짜던 js 객체 내용 그대로 데이터베이스에 밀어넣을 수 있어서 매우 저장과 출력이 편리
     
                ex) Database 예시

                    1. collection (테이블)
                       { name : 'kim'
                         age  : 20   }     <- document (데이터 단수)
            
                       { name : 'lee'
                         age  : 21   }     <- document (데이터 단수)
    
                    2. collection (테이블)
                       { goods   : 'apple'
                         quality : 3   }     <- document (데이터 단수)
            
                       { goods   : 'peer'
                         quality : 8   }     <- document (데이터 단수)


      # MongoDB 사용법
         1. 설치해서 쓰기
         2. mongodb.com 클라우드에서 호스팅받기 (추천)
             -> 클라우드라 따로 생성 필요X
             -> 무료용량 제공
             -> full text search index 기능 제공
             -> 돈을 내면, replica set이라고 해서 자동으로 3개의 데이터베이스에 분산저장 및 백업 제공

                1) mongodb.com 가입 후, 설문
                2) 무료 티어 선택 + 위치는 서울 추천 
                3) create! 후, 좌측 Database Access 메뉴에서 해당 클라우드 DB 접속용 아이디/비번을 만듦
                    -> (주의!) mongodb.com 계정이 아니라, 해당 db서버 계정에 대한 것임
                4) Bulit-in role에 atlas admin으로 설정
                    -> (중요) 이렇게 해줘야, nodejs에서 DB 접속시 온갖 것들을 다 사용가능
                5) 좌측 Network Access 메뉴에서 IP를 추가하여, 데이터베이스 접속할 수 있는 IP를 미리 정의해놓는 일종의 보안 설정
                    -> 보안 필요없이 아무데서나 쓸거면, Allow access from anywhere을 누르시거나 0.0.0.0/0 을 추가
                6) create DataBase를 통해, name과 collection을 만든다
                7) 웹서버와 해당 MongoDB 연결
                

      # MongoDB와 웹서버 연결하기
         1. npm install mongodb@5 를 입력하여, mongodb 라이브러리 설치
         2. 보일러 플레이트를 server.js에 추가

            const { MongoClient } = require('mongodb')
   
            let db
            const url = 'mongodb사이트에 있던 님들의 DB 접속 URL'

            new MongoClient(url).connect().then((client)=>{

              console.log('DB연결성공')
              db = client.db('forum')

              app.listen(8080, () => {
                console.log('http://localhost:8080 에서 서버 실행중')
              })

            }).catch((err)=>{
                
              console.log(err)
            })

         3. url 변수에 'DB접속 URL'을 찾아넣자
             -> 만든 database의 connect 버튼을 누른 뒤, driver를 선택하면..
                "mongodb+srv://DB접속아이디:DB접속비번@cluster0.jea.mongodb.net/?retryWrites=true&w=majority"
                  -> 이런 느낌의 문자열이 나오는데, 이걸 찾아서 대입해주면 됨
